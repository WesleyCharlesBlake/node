version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: poetapp/node
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build:
    executor: docker-publisher
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
            - ./docker-compose.yml

  lint:
    executor: docker-publisher
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i image.tar
      - run:
          name: Run lint in container
          command: |
            docker run -ti $IMAGE_NAME:latest npm run lint

  coverage:
    executor: docker-publisher
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i image.tar
      - run:
          name: Run lint in container
          command: |
            sed -i 's#build: .#image: poetapp/node:latest#g' docker-compose.yml
            docker-compose up -d
            docker-compose exec poet-node npm run coverage
  # publish:
  #   executor: docker-publisher
  #   steps:
  #     - attach_workspace:
  #         at: /tmp/workspace
  #     - setup_remote_docker
  #     - run:
  #         name: Load archived Docker image
  #         command: docker load -i /tmp/workspace/image.tar
  #     - run:
  #         name: Publish Docker Image to Docker Hub
  #         command: |
  #           echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  #           docker push $IMAGE_NAME:latest

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - lint:
          requires:
            - build
          filters:
            branches:
              only: master
      - coverage:
          requires:
            - build
          filters:
            branches:
              only: master
      # - publish:
      #     context: org-global
      #     requires:
      #       - lint
      #       - coverage
      #     filters:
      #       branches:
      #         only: master